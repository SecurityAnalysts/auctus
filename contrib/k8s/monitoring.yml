---
apiVersion: v1
kind: ConfigMap
metadata:
  name: monitoring
  labels:
    app: datamart
data:
  prometheus: |
    global:
      scrape_interval: 15s
    scrape_configs:
    - job_name: prometheus
      static_configs:
      - targets: ["localhost:9090"]
    - job_name: elasticsearch
      scrape_interval: 30s
      scrape_timeout: 10s
      static_configs:
      - targets: ["elasticsearch-scrape:9114"]
    - job_name: rabbitmq
      scrape_timeout: 5s
      metrics_path: /metrics
      static_configs:
      - targets: ["rabbitmq-scrape:15692"]
    - job_name: apiserver
      dns_sd_configs:
      - names:
        - apiserver-scrape
        type: "A"
        port: 8000
        refresh_interval: 60s
    - job_name: coordinator
      static_configs:
      - targets: ["coordinator-scrape:8000"]
    - job_name: profiler
      dns_sd_configs:
      - names:
        - profiler-scrape
        type: "A"
        port: 8000
        refresh_interval: 60s
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch-scrape
  labels:
    app: datamart
    what: monitoring
spec:
  selector:
    app: datamart
    what: elasticsearch-exporter
  clusterIP: None
  ports:
  - protocol: TCP
    port: 9114
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-scrape
  labels:
    app: datamart
    what: monitoring
spec:
  selector:
    app: datamart
    what: rabbitmq
  clusterIP: None
  ports:
  - protocol: TCP
    port: 15692
---
apiVersion: v1
kind: Service
metadata:
  name: profiler-scrape
  labels:
    app: datamart
    what: monitoring
spec:
  selector:
    app: datamart
    what: profiler
  clusterIP: None
  ports:
  - protocol: TCP
    port: 8000
---
apiVersion: v1
kind: Service
metadata:
  name: apiserver-scrape
  labels:
    app: datamart
    what: monitoring
spec:
  selector:
    app: datamart
    what: apiserver
  clusterIP: None
  ports:
  - protocol: TCP
    port: 8000
---
apiVersion: v1
kind: Service
metadata:
  name: coordinator-scrape
  labels:
    app: datamart
    what: monitoring
spec:
  selector:
    app: datamart
    what: coordinator
  clusterIP: None
  ports:
  - protocol: TCP
    port: 8000
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch-scrape
  labels:
    app: datamart
    what: monitoring
spec:
  selector:
    app: datamart
    what: elasticsearch-exporter
  clusterIP: None
  ports:
  - protocol: TCP
    port: 9114
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: elasticsearch-exporter
  labels:
    app: datamart
    what: elasticsearch-exporter
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: datamart
      what: elasticsearch-exporter
  template:
    metadata:
      labels:
        app: datamart
        what: elasticsearch-exporter
    spec:
      securityContext:
        runAsNonRoot: true
      containers:
      - name: elasticsearch-exporter
        image: justwatch/elasticsearch_exporter:1.1.0
        securityContext:
          runAsUser: 999
        args:
        - "--es.uri=http://elasticsearch:9200"
        - "--es.cluster_settings"
        - "--es.indices"
        - "--es.indices_settings"
        ports:
        - containerPort: 9114
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  labels:
    app: datamart
    what: prometheus
spec:
  selector:
    app: datamart
    what: prometheus
  ports:
  - protocol: TCP
    port: 9090
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  labels:
    app: datamart
    what: prometheus
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: datamart
      what: prometheus
  template:
    metadata:
      labels:
        app: datamart
        what: prometheus
    spec:
      securityContext:
        runAsNonRoot: true
      initContainers:
      - name: fix-permissions
        image: busybox
        securityContext:
          runAsNonRoot: false
        command: ["sh", "-c", "chown -R 65534:65534 /prometheus"]
        volumeMounts:
        - mountPath: /prometheus
          name: data
      containers:
      - name: prometheus
        image: prom/prometheus:v2.22.0
        securityContext:
          runAsUser: 65534 # "nobody" as set in image
        ports:
        - containerPort: 9090
        volumeMounts:
        - mountPath: /prometheus
          name: data
        - mountPath: /etc/prometheus/prometheus.yml
          subPath: prometheus
          name: config
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: prometheus
      - name: config
        configMap:
          name: monitoring
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  labels:
    app: datamart
    what: grafana
spec:
  selector:
    app: datamart
    what: grafana
  type: NodePort
  ports:
  - protocol: TCP
    port: 3000
    nodePort: 30041
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  labels:
    app: datamart
    what: grafana
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: datamart
      what: grafana
  template:
    metadata:
      labels:
        app: datamart
        what: grafana
    spec:
      securityContext:
        runAsNonRoot: true
      initContainers:
      - name: fix-permissions
        image: busybox
        securityContext:
          runAsNonRoot: false
        command: ["sh", "-c", "chown -R 472:472 /grafana"]
        volumeMounts:
        - mountPath: /grafana
          name: data
      containers:
      - name: grafana
        image: grafana/grafana:6.7.3
        securityContext:
          runAsUser: 472
        ports:
        - containerPort: 3000
        volumeMounts:
        - mountPath: /var/lib/grafana
          name: data
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: grafana
